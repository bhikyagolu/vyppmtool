{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","projectId","_ref4","_callee4","_context4","console","log","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","CreateButton","map","projectObj","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","window","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startDate","endDate","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","initialStae","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","confirm","_x5","Backlog","tasks","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","boardContent","projectNotFound","role","projectIdentifer","ProjectBoard_Backlog","boardAlgorithms","AddProjectTask","dueDate","newTask","addProjectTask","error","UpdateProjectTask","acceptance","created_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","loginRequest","login","protoTypes","PropTypes","func","isRequired","object","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c285e78f.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// types for BACKLOG_TYPES\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\n\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (projectId, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${projectId}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProject = projectId => async dispatch => {\r\n  console.log(\" deleting the project ! \" + projectId);\r\n  await axios.delete(`/api/project/${projectId}`);\r\n  dispatch({\r\n    type: DELETE_PROJECT,\r\n    payload: projectId\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const projects = this.props.project.projects;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(projectObj => (\r\n                <ProjectItem key={projectObj.id} project={projectObj} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    console.log(\"calling register api\");\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    console.log(\" got the errors in login response .....\");\r\n    console.log(err);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = loginRequest => async dispatch => {\r\n  try {\r\n    console.log(loginRequest);\r\n    // post => login request\r\n    const res = await axios.post(\"/api/users/login\", loginRequest);\r\n\r\n    // extract the token from res.data\r\n    const { token } = res.data;\r\n    // store the token into local storage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header\r\n    setJWTToken(token);\r\n    // decode the token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our security reducer\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    console.log(\" got the errors in login response .....\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n    console.log(newProject);\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialStae = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\nexport default function(state = initialStae, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    } = nextProps.project;\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    });\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n    console.log(newProject);\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\r\n                      \"form-control form-control-lg\",\r\n                      (\"is-invalid\": errors.projectName)\r\n                    )}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    disabled\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    } else if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    } else if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  console.log(\" -- in the action !\");\r\n  console.log(project_task);\r\n\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    console.log(\"fetching the project task \");\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  if (window.confirm(\"You are deleting the project task. Are you sure?\")) {\r\n    try {\r\n      await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n        type: DELETE_PROJECT_TASK,\r\n        payload: pt_id\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks } = this.props;\r\n    const tasks = project_tasks.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      } else if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      } else if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let boardContent;\r\n\r\n    const boardAlgorithms = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifer) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifer}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    boardContent = boardAlgorithms(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {boardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    console.log(newTask);\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ error: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptance: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      created_At: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.props.match.params);\r\n    const { backlog_id, id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newTask = {\r\n      id: this.state.id,\r\n      summary: this.state.summary,\r\n      projectSequence: this.state.projectSequence,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      created_At: this.state.created_At\r\n    };\r\n    console.log(newTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start you own\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    console.log(\"in register submit\");\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    console.log(newUser);\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username) \"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(loginRequest);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.protoTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now();\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // public routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              // private routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}